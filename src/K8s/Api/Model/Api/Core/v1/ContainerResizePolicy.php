<?php

/**
 * This file was automatically generated by k8s/api-generator 0.12.0 for API version v1.30.2
 *
 * (c) Chad Sikorra <Chad.Sikorra@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace K8s\Api\Model\Api\Core\v1;

use K8s\Core\Annotation as Kubernetes;

/**
 * ContainerResizePolicy represents resource resize policy for the container.
 */
class ContainerResizePolicy
{
    /**
     * @Kubernetes\Attribute("resourceName",isRequired=true)
     * @var string
     */
    protected $resourceName;

    /**
     * @Kubernetes\Attribute("restartPolicy",isRequired=true)
     * @var string
     */
    protected $restartPolicy;

    /**
     * @param string $resourceName
     * @param string $restartPolicy
     */
    public function __construct(string $resourceName, string $restartPolicy)
    {
        $this->resourceName = $resourceName;
        $this->restartPolicy = $restartPolicy;
    }

    /**
     * Name of the resource to which this resource resize policy applies. Supported values: cpu, memory.
     */
    public function getResourceName(): string
    {
        return $this->resourceName;
    }

    /**
     * Name of the resource to which this resource resize policy applies. Supported values: cpu, memory.
     *
     * @return static
     */
    public function setResourceName(string $resourceName)
    {
        $this->resourceName = $resourceName;

        return $this;
    }

    /**
     * Restart policy to apply when specified resource is resized. If not specified, it defaults to
     * NotRequired.
     */
    public function getRestartPolicy(): string
    {
        return $this->restartPolicy;
    }

    /**
     * Restart policy to apply when specified resource is resized. If not specified, it defaults to
     * NotRequired.
     *
     * @return static
     */
    public function setRestartPolicy(string $restartPolicy)
    {
        $this->restartPolicy = $restartPolicy;

        return $this;
    }
}
