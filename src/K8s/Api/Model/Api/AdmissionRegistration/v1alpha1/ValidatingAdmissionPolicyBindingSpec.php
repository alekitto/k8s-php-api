<?php

/**
 * This file was automatically generated by k8s/api-generator 0.12.0 for API version v1.26.15
 *
 * (c) Chad Sikorra <Chad.Sikorra@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace K8s\Api\Model\Api\AdmissionRegistration\v1alpha1;

use K8s\Core\Annotation as Kubernetes;

/**
 * ValidatingAdmissionPolicyBindingSpec is the specification of the ValidatingAdmissionPolicyBinding.
 */
class ValidatingAdmissionPolicyBindingSpec
{
    /**
     * @Kubernetes\Attribute("matchResources",type="model",model=MatchResources::class)
     * @var MatchResources|null
     */
    protected $matchResources = null;

    /**
     * @Kubernetes\Attribute("paramRef",type="model",model=ParamRef::class)
     * @var ParamRef|null
     */
    protected $paramRef = null;

    /**
     * @Kubernetes\Attribute("policyName")
     * @var string|null
     */
    protected $policyName = null;

    /**
     * @param MatchResources|null $matchResources
     * @param ParamRef|null $paramRef
     * @param string|null $policyName
     */
    public function __construct(?MatchResources $matchResources = null, ?ParamRef $paramRef = null, ?string $policyName = null)
    {
        $this->matchResources = $matchResources;
        $this->paramRef = $paramRef;
        $this->policyName = $policyName;
    }

    /**
     * MatchResources declares what resources match this binding and will be validated by it. Note that
     * this is intersected with the policy's matchConstraints, so only requests that are matched by the
     * policy can be selected by this. If this is unset, all resources matched by the policy are validated
     * by this binding When resourceRules is unset, it does not constrain resource matching. If a resource
     * is matched by the other fields of this object, it will be validated. Note that this is differs from
     * ValidatingAdmissionPolicy matchConstraints, where resourceRules are required.
     */
    public function getMatchResources(): ?MatchResources
    {
        return $this->matchResources;
    }

    /**
     * MatchResources declares what resources match this binding and will be validated by it. Note that
     * this is intersected with the policy's matchConstraints, so only requests that are matched by the
     * policy can be selected by this. If this is unset, all resources matched by the policy are validated
     * by this binding When resourceRules is unset, it does not constrain resource matching. If a resource
     * is matched by the other fields of this object, it will be validated. Note that this is differs from
     * ValidatingAdmissionPolicy matchConstraints, where resourceRules are required.
     *
     * @return static
     */
    public function setMatchResources(MatchResources $matchResources)
    {
        $this->matchResources = $matchResources;

        return $this;
    }

    /**
     * ParamRef specifies the parameter resource used to configure the admission control policy. It should
     * point to a resource of the type specified in ParamKind of the bound ValidatingAdmissionPolicy. If
     * the policy specifies a ParamKind and the resource referred to by ParamRef does not exist, this
     * binding is considered mis-configured and the FailurePolicy of the ValidatingAdmissionPolicy applied.
     */
    public function getParamRef(): ?ParamRef
    {
        return $this->paramRef;
    }

    /**
     * ParamRef specifies the parameter resource used to configure the admission control policy. It should
     * point to a resource of the type specified in ParamKind of the bound ValidatingAdmissionPolicy. If
     * the policy specifies a ParamKind and the resource referred to by ParamRef does not exist, this
     * binding is considered mis-configured and the FailurePolicy of the ValidatingAdmissionPolicy applied.
     *
     * @return static
     */
    public function setParamRef(ParamRef $paramRef)
    {
        $this->paramRef = $paramRef;

        return $this;
    }

    /**
     * PolicyName references a ValidatingAdmissionPolicy name which the ValidatingAdmissionPolicyBinding
     * binds to. If the referenced resource does not exist, this binding is considered invalid and will be
     * ignored Required.
     */
    public function getPolicyName(): ?string
    {
        return $this->policyName;
    }

    /**
     * PolicyName references a ValidatingAdmissionPolicy name which the ValidatingAdmissionPolicyBinding
     * binds to. If the referenced resource does not exist, this binding is considered invalid and will be
     * ignored Required.
     *
     * @return static
     */
    public function setPolicyName(string $policyName)
    {
        $this->policyName = $policyName;

        return $this;
    }
}
