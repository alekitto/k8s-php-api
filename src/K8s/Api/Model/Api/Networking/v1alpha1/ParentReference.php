<?php

/**
 * This file was automatically generated by k8s/api-generator 0.12.0 for API version v1.27.15
 *
 * (c) Chad Sikorra <Chad.Sikorra@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace K8s\Api\Model\Api\Networking\v1alpha1;

use K8s\Core\Annotation as Kubernetes;

/**
 * ParentReference describes a reference to a parent object.
 */
class ParentReference
{
    /**
     * @Kubernetes\Attribute("group")
     * @var string|null
     */
    protected $group = null;

    /**
     * @Kubernetes\Attribute("name")
     * @var string|null
     */
    protected $name = null;

    /**
     * @Kubernetes\Attribute("namespace")
     * @var string|null
     */
    protected $namespace = null;

    /**
     * @Kubernetes\Attribute("resource")
     * @var string|null
     */
    protected $resource = null;

    /**
     * @Kubernetes\Attribute("uid")
     * @var string|null
     */
    protected $uid = null;

    /**
     * @param string|null $group
     * @param string|null $name
     * @param string|null $namespace
     * @param string|null $resource
     * @param string|null $uid
     */
    public function __construct(?string $group = null, ?string $name = null, ?string $namespace = null, ?string $resource = null, ?string $uid = null)
    {
        $this->group = $group;
        $this->name = $name;
        $this->namespace = $namespace;
        $this->resource = $resource;
        $this->uid = $uid;
    }

    /**
     * Group is the group of the object being referenced.
     */
    public function getGroup(): ?string
    {
        return $this->group;
    }

    /**
     * Group is the group of the object being referenced.
     *
     * @return static
     */
    public function setGroup(string $group)
    {
        $this->group = $group;

        return $this;
    }

    /**
     * Name is the name of the object being referenced.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Name is the name of the object being referenced.
     *
     * @return static
     */
    public function setName(string $name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Namespace is the namespace of the object being referenced.
     */
    public function getNamespace(): ?string
    {
        return $this->namespace;
    }

    /**
     * Namespace is the namespace of the object being referenced.
     *
     * @return static
     */
    public function setNamespace(string $namespace)
    {
        $this->namespace = $namespace;

        return $this;
    }

    /**
     * Resource is the resource of the object being referenced.
     */
    public function getResource(): ?string
    {
        return $this->resource;
    }

    /**
     * Resource is the resource of the object being referenced.
     *
     * @return static
     */
    public function setResource(string $resource)
    {
        $this->resource = $resource;

        return $this;
    }

    /**
     * UID is the uid of the object being referenced.
     */
    public function getUid(): ?string
    {
        return $this->uid;
    }

    /**
     * UID is the uid of the object being referenced.
     *
     * @return static
     */
    public function setUid(string $uid)
    {
        $this->uid = $uid;

        return $this;
    }
}
