<?php

/**
 * This file was automatically generated by k8s/api-generator 0.12.0 for API version v1.30.2
 *
 * (c) Chad Sikorra <Chad.Sikorra@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace K8s\Api\Model\Api\Resource\v1alpha2;

use K8s\Core\Annotation as Kubernetes;

/**
 * VendorParameters are opaque parameters for one particular driver.
 */
class VendorParameters
{
    /**
     * @Kubernetes\Attribute("driverName")
     * @var string|null
     */
    protected $driverName = null;

    /**
     * @Kubernetes\Attribute("parameters")
     * @var object|null
     */
    protected $parameters = null;

    /**
     * @param string|null $driverName
     * @param object|null $parameters
     */
    public function __construct(?string $driverName = null, $parameters = null)
    {
        $this->driverName = $driverName;
        $this->parameters = $parameters;
    }

    /**
     * DriverName is the name used by the DRA driver kubelet plugin.
     */
    public function getDriverName(): ?string
    {
        return $this->driverName;
    }

    /**
     * DriverName is the name used by the DRA driver kubelet plugin.
     *
     * @return static
     */
    public function setDriverName(string $driverName)
    {
        $this->driverName = $driverName;

        return $this;
    }

    /**
     * Parameters can be arbitrary setup parameters. They are ignored while allocating a claim.
     *
     * @return object
     */
    public function getParameters()
    {
        return $this->parameters;
    }

    /**
     * Parameters can be arbitrary setup parameters. They are ignored while allocating a claim.
     *
     * @param object $parameters
     * @return static
     */
    public function setParameters($parameters)
    {
        $this->parameters = $parameters;

        return $this;
    }
}
