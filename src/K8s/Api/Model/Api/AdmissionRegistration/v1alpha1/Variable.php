<?php

/**
 * This file was automatically generated by k8s/api-generator 0.12.0 for API version v1.30.3
 *
 * (c) Chad Sikorra <Chad.Sikorra@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace K8s\Api\Model\Api\AdmissionRegistration\v1alpha1;

use K8s\Core\Annotation as Kubernetes;

/**
 * Variable is the definition of a variable that is used for composition.
 */
class Variable
{
    /**
     * @Kubernetes\Attribute("expression",isRequired=true)
     * @var string
     */
    protected $expression;

    /**
     * @Kubernetes\Attribute("name",isRequired=true)
     * @var string
     */
    protected $name;

    /**
     * @param string $expression
     * @param string $name
     */
    public function __construct(string $expression, string $name)
    {
        $this->expression = $expression;
        $this->name = $name;
    }

    /**
     * Expression is the expression that will be evaluated as the value of the variable. The CEL expression
     * has access to the same identifiers as the CEL expressions in Validation.
     */
    public function getExpression(): string
    {
        return $this->expression;
    }

    /**
     * Expression is the expression that will be evaluated as the value of the variable. The CEL expression
     * has access to the same identifiers as the CEL expressions in Validation.
     *
     * @return static
     */
    public function setExpression(string $expression)
    {
        $this->expression = $expression;

        return $this;
    }

    /**
     * Name is the name of the variable. The name must be a valid CEL identifier and unique among all
     * variables. The variable can be accessed in other expressions through `variables` For example, if
     * name is "foo", the variable will be available as `variables.foo`
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Name is the name of the variable. The name must be a valid CEL identifier and unique among all
     * variables. The variable can be accessed in other expressions through `variables` For example, if
     * name is "foo", the variable will be available as `variables.foo`
     *
     * @return static
     */
    public function setName(string $name)
    {
        $this->name = $name;

        return $this;
    }
}
