<?php

/**
 * This file was automatically generated by k8s/api-generator 0.12.0 for API version v1.30.2
 *
 * (c) Chad Sikorra <Chad.Sikorra@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace K8s\Api\Model\Api\Networking\v1;

use K8s\Core\Annotation as Kubernetes;
use K8s\Core\Collection;

/**
 * IngressLoadBalancerStatus represents the status of a load-balancer.
 */
class IngressLoadBalancerStatus
{
    /**
     * @Kubernetes\Attribute("ingress",type="collection",model=IngressLoadBalancerIngress::class)
     * @var iterable|IngressLoadBalancerIngress[]|null
     */
    protected $ingress = null;

    /**
     * @param iterable|IngressLoadBalancerIngress[] $ingress
     */
    public function __construct(iterable $ingress = [])
    {
        $this->ingress = new Collection($ingress);
    }

    /**
     * ingress is a list containing ingress points for the load-balancer.
     *
     * @return iterable|IngressLoadBalancerIngress[]
     */
    public function getIngress(): ?iterable
    {
        return $this->ingress;
    }

    /**
     * ingress is a list containing ingress points for the load-balancer.
     *
     * @return static
     */
    public function setIngress(iterable $ingress)
    {
        $this->ingress = $ingress;

        return $this;
    }

    /**
     * @return static
     */
    public function addIngress(IngressLoadBalancerIngress $ingre)
    {
        if (!$this->ingress) {
            $this->ingress = new Collection();
        }
        $this->ingress[] = $ingre;

        return $this;
    }
}
