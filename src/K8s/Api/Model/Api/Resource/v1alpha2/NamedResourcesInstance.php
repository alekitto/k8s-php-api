<?php

/**
 * This file was automatically generated by k8s/api-generator 0.12.0 for API version v1.30.2
 *
 * (c) Chad Sikorra <Chad.Sikorra@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace K8s\Api\Model\Api\Resource\v1alpha2;

use K8s\Core\Annotation as Kubernetes;
use K8s\Core\Collection;

/**
 * NamedResourcesInstance represents one individual hardware instance that can be selected based on its
 * attributes.
 */
class NamedResourcesInstance
{
    /**
     * @Kubernetes\Attribute("attributes",type="collection",model=NamedResourcesAttribute::class)
     * @var iterable|NamedResourcesAttribute[]|null
     */
    protected $attributes = null;

    /**
     * @Kubernetes\Attribute("name",isRequired=true)
     * @var string
     */
    protected $name;

    /**
     * @param string $name
     */
    public function __construct(string $name)
    {
        $this->name = $name;
    }

    /**
     * Attributes defines the attributes of this resource instance. The name of each attribute must be
     * unique.
     *
     * @return iterable|NamedResourcesAttribute[]
     */
    public function getAttributes(): ?iterable
    {
        return $this->attributes;
    }

    /**
     * Attributes defines the attributes of this resource instance. The name of each attribute must be
     * unique.
     *
     * @return static
     */
    public function setAttributes(iterable $attributes)
    {
        $this->attributes = $attributes;

        return $this;
    }

    /**
     * @return static
     */
    public function addAttributes(NamedResourcesAttribute $attribute)
    {
        if (!$this->attributes) {
            $this->attributes = new Collection();
        }
        $this->attributes[] = $attribute;

        return $this;
    }

    /**
     * Name is unique identifier among all resource instances managed by the driver on the node. It must be
     * a DNS subdomain.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Name is unique identifier among all resource instances managed by the driver on the node. It must be
     * a DNS subdomain.
     *
     * @return static
     */
    public function setName(string $name)
    {
        $this->name = $name;

        return $this;
    }
}
