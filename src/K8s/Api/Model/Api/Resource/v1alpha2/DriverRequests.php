<?php

/**
 * This file was automatically generated by k8s/api-generator 0.12.0 for API version v1.30.2
 *
 * (c) Chad Sikorra <Chad.Sikorra@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace K8s\Api\Model\Api\Resource\v1alpha2;

use K8s\Core\Annotation as Kubernetes;
use K8s\Core\Collection;

/**
 * DriverRequests describes all resources that are needed from one particular driver.
 */
class DriverRequests
{
    /**
     * @Kubernetes\Attribute("driverName")
     * @var string|null
     */
    protected $driverName = null;

    /**
     * @Kubernetes\Attribute("requests",type="collection",model=ResourceRequest::class)
     * @var iterable|ResourceRequest[]|null
     */
    protected $requests = null;

    /**
     * @Kubernetes\Attribute("vendorParameters")
     * @var object|null
     */
    protected $vendorParameters = null;

    /**
     * @param string|null $driverName
     * @param iterable|ResourceRequest[] $requests
     * @param object|null $vendorParameters
     */
    public function __construct(?string $driverName = null, iterable $requests = [], $vendorParameters = null)
    {
        $this->driverName = $driverName;
        $this->requests = new Collection($requests);
        $this->vendorParameters = $vendorParameters;
    }

    /**
     * DriverName is the name used by the DRA driver kubelet plugin.
     */
    public function getDriverName(): ?string
    {
        return $this->driverName;
    }

    /**
     * DriverName is the name used by the DRA driver kubelet plugin.
     *
     * @return static
     */
    public function setDriverName(string $driverName)
    {
        $this->driverName = $driverName;

        return $this;
    }

    /**
     * Requests describes all resources that are needed from the driver.
     *
     * @return iterable|ResourceRequest[]
     */
    public function getRequests(): ?iterable
    {
        return $this->requests;
    }

    /**
     * Requests describes all resources that are needed from the driver.
     *
     * @return static
     */
    public function setRequests(iterable $requests)
    {
        $this->requests = $requests;

        return $this;
    }

    /**
     * @return static
     */
    public function addRequests(ResourceRequest $request)
    {
        if (!$this->requests) {
            $this->requests = new Collection();
        }
        $this->requests[] = $request;

        return $this;
    }

    /**
     * VendorParameters are arbitrary setup parameters for all requests of the claim. They are ignored
     * while allocating the claim.
     *
     * @return object
     */
    public function getVendorParameters()
    {
        return $this->vendorParameters;
    }

    /**
     * VendorParameters are arbitrary setup parameters for all requests of the claim. They are ignored
     * while allocating the claim.
     *
     * @param object $vendorParameters
     * @return static
     */
    public function setVendorParameters($vendorParameters)
    {
        $this->vendorParameters = $vendorParameters;

        return $this;
    }
}
