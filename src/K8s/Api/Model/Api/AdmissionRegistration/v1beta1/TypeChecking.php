<?php

/**
 * This file was automatically generated by k8s/api-generator 0.12.0 for API version v1.29.6
 *
 * (c) Chad Sikorra <Chad.Sikorra@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace K8s\Api\Model\Api\AdmissionRegistration\v1beta1;

use K8s\Core\Annotation as Kubernetes;
use K8s\Core\Collection;

/**
 * TypeChecking contains results of type checking the expressions in the ValidatingAdmissionPolicy
 */
class TypeChecking
{
    /**
     * @Kubernetes\Attribute("expressionWarnings",type="collection",model=ExpressionWarning::class)
     * @var iterable|ExpressionWarning[]|null
     */
    protected $expressionWarnings = null;

    /**
     * @param iterable|ExpressionWarning[] $expressionWarnings
     */
    public function __construct(iterable $expressionWarnings = [])
    {
        $this->expressionWarnings = new Collection($expressionWarnings);
    }

    /**
     * The type checking warnings for each expression.
     *
     * @return iterable|ExpressionWarning[]
     */
    public function getExpressionWarnings(): ?iterable
    {
        return $this->expressionWarnings;
    }

    /**
     * The type checking warnings for each expression.
     *
     * @return static
     */
    public function setExpressionWarnings(iterable $expressionWarnings)
    {
        $this->expressionWarnings = $expressionWarnings;

        return $this;
    }

    /**
     * @return static
     */
    public function addExpressionWarnings(ExpressionWarning $expressionWarning)
    {
        if (!$this->expressionWarnings) {
            $this->expressionWarnings = new Collection();
        }
        $this->expressionWarnings[] = $expressionWarning;

        return $this;
    }
}
