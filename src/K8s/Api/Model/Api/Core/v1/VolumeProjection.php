<?php

/**
 * This file was automatically generated by k8s/api-generator 0.12.0 for API version v1.30.3
 *
 * (c) Chad Sikorra <Chad.Sikorra@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace K8s\Api\Model\Api\Core\v1;

use K8s\Core\Annotation as Kubernetes;

/**
 * Projection that may be projected along with other supported volume types
 */
class VolumeProjection
{
    /**
     * @Kubernetes\Attribute("clusterTrustBundle",type="model",model=ClusterTrustBundleProjection::class)
     * @var ClusterTrustBundleProjection|null
     */
    protected $clusterTrustBundle = null;

    /**
     * @Kubernetes\Attribute("configMap",type="model",model=ConfigMapProjection::class)
     * @var ConfigMapProjection|null
     */
    protected $configMap = null;

    /**
     * @Kubernetes\Attribute("downwardAPI",type="model",model=DownwardAPIProjection::class)
     * @var DownwardAPIProjection|null
     */
    protected $downwardAPI = null;

    /**
     * @Kubernetes\Attribute("secret",type="model",model=SecretProjection::class)
     * @var SecretProjection|null
     */
    protected $secret = null;

    /**
     * @Kubernetes\Attribute("serviceAccountToken",type="model",model=ServiceAccountTokenProjection::class)
     * @var ServiceAccountTokenProjection|null
     */
    protected $serviceAccountToken = null;

    /**
     * @param ClusterTrustBundleProjection|null $clusterTrustBundle
     * @param ConfigMapProjection|null $configMap
     * @param DownwardAPIProjection|null $downwardAPI
     * @param SecretProjection|null $secret
     * @param ServiceAccountTokenProjection|null $serviceAccountToken
     */
    public function __construct(
        ?ClusterTrustBundleProjection $clusterTrustBundle = null,
        ?ConfigMapProjection $configMap = null,
        ?DownwardAPIProjection $downwardAPI = null,
        ?SecretProjection $secret = null,
        ?ServiceAccountTokenProjection $serviceAccountToken = null
    ) {
        $this->clusterTrustBundle = $clusterTrustBundle;
        $this->configMap = $configMap;
        $this->downwardAPI = $downwardAPI;
        $this->secret = $secret;
        $this->serviceAccountToken = $serviceAccountToken;
    }

    /**
     * ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field of ClusterTrustBundle
     * objects in an auto-updating file.
     *
     * Alpha, gated by the ClusterTrustBundleProjection feature gate.
     *
     * ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and
     * a label selector.
     *
     * Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.
     * Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are
     * deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the
     * order over time.
     */
    public function getClusterTrustBundle(): ?ClusterTrustBundleProjection
    {
        return $this->clusterTrustBundle;
    }

    /**
     * ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field of ClusterTrustBundle
     * objects in an auto-updating file.
     *
     * Alpha, gated by the ClusterTrustBundleProjection feature gate.
     *
     * ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and
     * a label selector.
     *
     * Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.
     * Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are
     * deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the
     * order over time.
     *
     * @return static
     */
    public function setClusterTrustBundle(ClusterTrustBundleProjection $clusterTrustBundle)
    {
        $this->clusterTrustBundle = $clusterTrustBundle;

        return $this;
    }

    /**
     * configMap information about the configMap data to project
     */
    public function getConfigMap(): ?ConfigMapProjection
    {
        return $this->configMap;
    }

    /**
     * configMap information about the configMap data to project
     *
     * @return static
     */
    public function setConfigMap(ConfigMapProjection $configMap)
    {
        $this->configMap = $configMap;

        return $this;
    }

    /**
     * downwardAPI information about the downwardAPI data to project
     */
    public function getDownwardAPI(): ?DownwardAPIProjection
    {
        return $this->downwardAPI;
    }

    /**
     * downwardAPI information about the downwardAPI data to project
     *
     * @return static
     */
    public function setDownwardAPI(DownwardAPIProjection $downwardAPI)
    {
        $this->downwardAPI = $downwardAPI;

        return $this;
    }

    /**
     * secret information about the secret data to project
     */
    public function getSecret(): ?SecretProjection
    {
        return $this->secret;
    }

    /**
     * secret information about the secret data to project
     *
     * @return static
     */
    public function setSecret(SecretProjection $secret)
    {
        $this->secret = $secret;

        return $this;
    }

    /**
     * serviceAccountToken is information about the serviceAccountToken data to project
     */
    public function getServiceAccountToken(): ?ServiceAccountTokenProjection
    {
        return $this->serviceAccountToken;
    }

    /**
     * serviceAccountToken is information about the serviceAccountToken data to project
     *
     * @return static
     */
    public function setServiceAccountToken(ServiceAccountTokenProjection $serviceAccountToken)
    {
        $this->serviceAccountToken = $serviceAccountToken;

        return $this;
    }
}
