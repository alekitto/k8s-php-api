<?php

/**
 * This file was automatically generated by k8s/api-generator 0.12.0 for API version v1.30.2
 *
 * (c) Chad Sikorra <Chad.Sikorra@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace K8s\Api\Model\Api\Resource\v1alpha2;

use K8s\Core\Annotation as Kubernetes;

/**
 * PodSchedulingContextSpec describes where resources for the Pod are needed.
 */
class PodSchedulingContextSpec
{
    /**
     * @Kubernetes\Attribute("potentialNodes")
     * @var string[]|null
     */
    protected $potentialNodes = null;

    /**
     * @Kubernetes\Attribute("selectedNode")
     * @var string|null
     */
    protected $selectedNode = null;

    /**
     * @param string[]|null $potentialNodes
     * @param string|null $selectedNode
     */
    public function __construct(?array $potentialNodes = null, ?string $selectedNode = null)
    {
        $this->potentialNodes = $potentialNodes;
        $this->selectedNode = $selectedNode;
    }

    /**
     * PotentialNodes lists nodes where the Pod might be able to run.
     *
     * The size of this field is limited to 128. This is large enough for many clusters. Larger clusters
     * may need more attempts to find a node that suits all pending resources. This may get increased in
     * the future, but not reduced.
     */
    public function getPotentialNodes(): ?array
    {
        return $this->potentialNodes;
    }

    /**
     * PotentialNodes lists nodes where the Pod might be able to run.
     *
     * The size of this field is limited to 128. This is large enough for many clusters. Larger clusters
     * may need more attempts to find a node that suits all pending resources. This may get increased in
     * the future, but not reduced.
     *
     * @return static
     */
    public function setPotentialNodes(array $potentialNodes)
    {
        $this->potentialNodes = $potentialNodes;

        return $this;
    }

    /**
     * SelectedNode is the node for which allocation of ResourceClaims that are referenced by the Pod and
     * that use "WaitForFirstConsumer" allocation is to be attempted.
     */
    public function getSelectedNode(): ?string
    {
        return $this->selectedNode;
    }

    /**
     * SelectedNode is the node for which allocation of ResourceClaims that are referenced by the Pod and
     * that use "WaitForFirstConsumer" allocation is to be attempted.
     *
     * @return static
     */
    public function setSelectedNode(string $selectedNode)
    {
        $this->selectedNode = $selectedNode;

        return $this;
    }
}
