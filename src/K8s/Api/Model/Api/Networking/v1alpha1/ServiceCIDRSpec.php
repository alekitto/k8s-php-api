<?php

/**
 * This file was automatically generated by k8s/api-generator 0.12.0 for API version v1.30.3
 *
 * (c) Chad Sikorra <Chad.Sikorra@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace K8s\Api\Model\Api\Networking\v1alpha1;

use K8s\Core\Annotation as Kubernetes;

/**
 * ServiceCIDRSpec define the CIDRs the user wants to use for allocating ClusterIPs for Services.
 */
class ServiceCIDRSpec
{
    /**
     * @Kubernetes\Attribute("cidrs")
     * @var string[]|null
     */
    protected $cidrs = null;

    /**
     * @param string[]|null $cidrs
     */
    public function __construct(?array $cidrs = null)
    {
        $this->cidrs = $cidrs;
    }

    /**
     * CIDRs defines the IP blocks in CIDR notation (e.g. "192.168.0.0/24" or "2001:db8::/64") from which
     * to assign service cluster IPs. Max of two CIDRs is allowed, one of each IP family. This field is
     * immutable.
     */
    public function getCidrs(): ?array
    {
        return $this->cidrs;
    }

    /**
     * CIDRs defines the IP blocks in CIDR notation (e.g. "192.168.0.0/24" or "2001:db8::/64") from which
     * to assign service cluster IPs. Max of two CIDRs is allowed, one of each IP family. This field is
     * immutable.
     *
     * @return static
     */
    public function setCidrs(array $cidrs)
    {
        $this->cidrs = $cidrs;

        return $this;
    }
}
